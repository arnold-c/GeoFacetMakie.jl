import{_ as s,c as a,o as n,aB as e}from"./chunks/framework.Dc_i9yUg.js";const g=JSON.parse('{"title":"Utilities","description":"","frontmatter":{},"headers":[],"relativePath":"api/utilities.md","filePath":"api/utilities.md","lastUpdated":null}'),t={name:"api/utilities.md"};function l(h,i,p,k,r,d){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="Utilities" tabindex="-1">Utilities <a class="header-anchor" href="#Utilities" aria-label="Permalink to &quot;Utilities {#Utilities}&quot;">​</a></h1><p>This page documents utility functions and helper tools in GeoFacetMakie.jl for data preparation, validation, and workflow optimization.</p><h2 id="Internal-Utilities" tabindex="-1">Internal Utilities <a class="header-anchor" href="#Internal-Utilities" aria-label="Permalink to &quot;Internal Utilities {#Internal-Utilities}&quot;">​</a></h2><p>The following functions are used internally by GeoFacetMakie.jl but are not exported. They are documented here for completeness and for developers who may need to understand the package internals.</p><h3 id="Data-Processing" tabindex="-1">Data Processing <a class="header-anchor" href="#Data-Processing" aria-label="Permalink to &quot;Data Processing {#Data-Processing}&quot;">​</a></h3><p>The package includes several internal functions for processing data:</p><ul><li><p><code>_prepare_grouped_data(data, region_col)</code> - Groups data by region column</p></li><li><p><code>_get_available_regions(grouped_data, region_col)</code> - Extracts available region codes</p></li><li><p><code>_has_region_data(available_regions, region_code)</code> - Checks if region data exists</p></li><li><p><code>_get_region_data(grouped_data, region_col, region_code)</code> - Gets data for specific region</p></li><li><p><code>_has_labeled_plots(fig)</code> - Checks if figure contains plots with labels</p></li></ul><h3 id="Axis-Management" tabindex="-1">Axis Management <a class="header-anchor" href="#Axis-Management" aria-label="Permalink to &quot;Axis Management {#Axis-Management}&quot;">​</a></h3><p>Internal axis management functions:</p><ul><li><p><code>_get_yaxis_position(axis_kwargs)</code> - Gets y-axis position from kwargs</p></li><li><p><code>_merge_axis_kwargs(common_kwargs, per_axis_kwargs_list, per_axis_decoration_kwargs, num_axes)</code> - Merges axis kwargs with proper precedence</p></li><li><p><code>collect_gl_axes_by_position(layouts)</code> - Collects axes from GridLayouts by position</p></li><li><p><code>hide_all_decorations!(layout)</code> - Hides all decorations in a GridLayout</p></li></ul><h2 id="Usage-Examples" tabindex="-1">Usage Examples <a class="header-anchor" href="#Usage-Examples" aria-label="Permalink to &quot;Usage Examples {#Usage-Examples}&quot;">​</a></h2><h3 id="Working-with-Predefined-Grids" tabindex="-1">Working with Predefined Grids <a class="header-anchor" href="#Working-with-Predefined-Grids" aria-label="Permalink to &quot;Working with Predefined Grids {#Working-with-Predefined-Grids}&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check how many predefined grids are available</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_predefined_grids_count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Available predefined grids: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, count)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># List all available grids</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">available </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list_available_grids</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;First 5 grids: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(available[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;, &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load a specific grid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> load_grid_from_csv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;us_state_grid1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="Grid-Validation-and-Information" tabindex="-1">Grid Validation and Information <a class="header-anchor" href="#Grid-Validation-and-Information" aria-label="Permalink to &quot;Grid Validation and Information {#Grid-Validation-and-Information}&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Validate a grid</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    validate_grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grid is valid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grid validation failed: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get grid information</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">max_row, max_col </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> grid_dimensions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grid dimensions: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(max_row)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> × </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(max_col)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check if grid is a complete rectangle</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> is_complete_rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grid forms a complete rectangle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grid has gaps&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get all regions in the grid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">regions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_regions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grid contains </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(length(regions))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> regions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="Region-Queries" tabindex="-1">Region Queries <a class="header-anchor" href="#Region-Queries" aria-label="Permalink to &quot;Region Queries {#Region-Queries}&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check if a region exists</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> has_region</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;California is in the grid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get position of a region</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isnothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pos)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;California is at position </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(pos)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get region at a specific position</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">region </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_region_at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isnothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(region)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Region at (2,3): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(region)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h3 id="Neighbor-Detection" tabindex="-1">Neighbor Detection <a class="header-anchor" href="#Neighbor-Detection" aria-label="Permalink to &quot;Neighbor Detection {#Neighbor-Detection}&quot;">​</a></h3><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check neighbors for axis decoration hiding</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">region </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;TX&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> has_neighbor_below</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, region)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(region)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has a neighbor below&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> has_neighbor_left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, region)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(region)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has a neighbor to the left&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> has_neighbor_right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, region)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(region)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has a neighbor to the right&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> has_neighbor_above</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, region)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(region)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has a neighbor above&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h2 id="Performance-Notes" tabindex="-1">Performance Notes <a class="header-anchor" href="#Performance-Notes" aria-label="Permalink to &quot;Performance Notes {#Performance-Notes}&quot;">​</a></h2><h3 id="Grid-Operations" tabindex="-1">Grid Operations <a class="header-anchor" href="#Grid-Operations" aria-label="Permalink to &quot;Grid Operations {#Grid-Operations}&quot;">​</a></h3><p>Most grid utility functions are optimized for performance:</p><ul><li><p><code>has_neighbor_*</code> functions use vectorized operations for efficiency</p></li><li><p><code>get_position</code> and <code>get_region_at</code> use efficient search algorithms</p></li><li><p>Grid validation is performed once during construction</p></li></ul><h3 id="Memory-Usage" tabindex="-1">Memory Usage <a class="header-anchor" href="#Memory-Usage" aria-label="Permalink to &quot;Memory Usage {#Memory-Usage}&quot;">​</a></h3><ul><li><p>GeoGrid uses StructArray for efficient memory layout</p></li><li><p>Neighbor detection functions avoid creating temporary arrays</p></li><li><p>Grid metadata is stored efficiently in dictionaries</p></li></ul><h2 id="See-Also" tabindex="-1">See Also <a class="header-anchor" href="#See-Also" aria-label="Permalink to &quot;See Also {#See-Also}&quot;">​</a></h2><ul><li><p><a href="./core">Core Functions</a> - Main plotting functions</p></li><li><p><a href="./grids">Grid Operations</a> - Working with geographic grids</p></li></ul>`,27)]))}const E=s(t,[["render",l]]);export{g as __pageData,E as default};
